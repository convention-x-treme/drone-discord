kind: pipeline
type: docker
name: testing

trigger:
  branch:
    - feature/build
  event:
    - push
    - cron

image_pull_secrets:
  - DOCKER_REGISTRY_AUTH

workspace:
  path: /usr/src
  
steps:
  - name: install-modules
    image: registry.convention-x-treme.de/baseimages/golang:latest
    commands:
      - go mod download && go mod verify
    
  - name: testcoverage
    depends_on:
      - install-modules
    image: registry.convention-x-treme.de/baseimages/golang:latest
    environment:
      WEBHOOK_ID:
        from_secret: 'DISCORD_WEBHOOK_ID_PLAYGROUND'
      WEBHOOK_TOKEN:
        from_secret: 'DISCORD_WEBHOOK_TOKEN_PLAYGROUND'
    commands:
      - go test -short -coverprofile coverage.out $(go list ./... | grep -v /vendor/)

  - name: linting
    depends_on:
      - install-modules
    failure: ignore
    image: golangci/golangci-lint:latest-alpine
    commands:
      - golangci-lint run -v --timeout 3m0s
      
  - name: code-analysis
    depends_on:
      - testcoverage
      - linting
    image: sonarsource/sonar-scanner-cli
    environment:
      SONAR_TOKEN:
        from_secret: SONAR_TOKEN
      SONAR_HOST_URL:
        from_secret: SONAR_HOST
    commands:
      - ci/set-version.sh
      - sonar-scanner

---
kind: pipeline
type: docker
name: develop-linux-amd64

trigger:
  branch:
    - feature/build
  event:
    - push
    - cron

image_pull_secrets:
  - DOCKER_REGISTRY_AUTH

workspace:
  path: /usr/src
  
steps:
  - name: build
    image: registry.convention-x-treme.de/baseimages/golang:latest
    commands:
      - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o release/linux/amd64/drone-discord ./cmd/plugin/...

  - name: container-image
    depends_on:
      - build
    image: plugins/docker
    settings:
      repo: registry.convention-x-treme.de/infra/drone-discord
      registry: registry.convention-x-treme.de
      username:
        from_secret: 'DOCKER_REGISTRY_USER'
      password:
        from_secret: 'DOCKER_REGISTRY_PASSWORD'
      dockerfile: 'build/linux-amd64.Dockerfile'
      platform: linux/amd64
      tags:
        - latest

---
kind: pipeline
type: docker
name: develop-linux-arm64

trigger:
  branch:
    - feature/build
  event:
    - push
    - cron

image_pull_secrets:
  - DOCKER_REGISTRY_AUTH

workspace:
  path: /usr/src
  
steps:
  - name: build
    image: registry.convention-x-treme.de/baseimages/golang:latest
    commands:
      - CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -a -o release/linux/arm64/drone-discord ./cmd/plugin/...

  - name: container-image
    depends_on:
      - build
    image: plugins/docker
    settings:
      repo: registry.convention-x-treme.de/infra/drone-discord
      registry: registry.convention-x-treme.de
      username:
        from_secret: 'DOCKER_REGISTRY_USER'
      password:
        from_secret: 'DOCKER_REGISTRY_PASSWORD'
      dockerfile: 'build/linux-arm64.Dockerfile'
      platform: linux/arm64
      tags:
        - latest

---
kind: pipeline
type: docker
name: develop-linux-arm

trigger:
  branch:
    - feature/build
  event:
    - push
    - cron

image_pull_secrets:
  - DOCKER_REGISTRY_AUTH

workspace:
  path: /usr/src
  
steps:
  - name: build
    image: registry.convention-x-treme.de/baseimages/golang:latest
    commands:
      - CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -a -o release/linux/arm/drone-discord ./cmd/plugin/...
      
  - name: container-image
    depends_on:
      - build
    image: plugins/docker
    settings:
      repo: registry.convention-x-treme.de/infra/drone-discord
      registry: registry.convention-x-treme.de
      username:
        from_secret: 'DOCKER_REGISTRY_USER'
      password:
        from_secret: 'DOCKER_REGISTRY_PASSWORD'
      dockerfile: 'build/linux-arm.Dockerfile'
      platform: linux/arm
      tags:
        - latest